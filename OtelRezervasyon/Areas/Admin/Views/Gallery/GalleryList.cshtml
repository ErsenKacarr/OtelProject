@model List<OtelRezervasyon.EntityLayer.Concrete.Gallery>

@{
    ViewData["Title"] = "GalleryList";
    Layout = "~/Areas/Admin/Views/AdminLayout/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Gallery Listesi</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="list-group" id="galleryList">
            @foreach (var item in Model)
            {
                <div class="list-group-item">
                    <div class="row align-items-center">
                        <div class="col-md-3">
                            <img src="@item.Imageurl" class="img-fluid img-thumbnail" alt="@item.Title" style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#imageModal" data-bs-image="@item.Imageurl" data-bs-title="@item.Title" />
                        </div>
                        <div class="col-md-9">
                            <h5 class="mt-2">@item.Title</h5>
                            <p>Fotoğraf ID: @item.GalleryId</p>
                            <a href="@Url.Action("UpdateGallery", "Gallery", new { area = "Admin", id = item.GalleryId })" class="btn btn-sm btn-warning">Güncelle</a>
                            <a href="@Url.Action("RemoveGallery", "Gallery", new { area = "Admin", id = item.GalleryId })" class="btn btn-sm btn-danger">Sil</a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="pagination mt-4" id="pagination">
            <!-- Sayfalama düğmeleri buraya eklenecek -->
        </div>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            Henüz Resim bulunmamaktadır.
        </div>
    }

    <div class="mt-4">
        <a href="@Url.Action("CreateGallery", "Gallery", new { area = "Admin" })" class="btn btn-primary">
            Yeni Fotoğraf Ekle
        </a>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Fotoğraf</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="modalImage" src="" alt="" class="img-fluid">
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var imageModal = document.getElementById('imageModal');
        imageModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var imageUrl = button.getAttribute('data-bs-image');
            var imageTitle = button.getAttribute('data-bs-title');
            var modalImage = document.getElementById('modalImage');
            var modalTitle = imageModal.querySelector('.modal-title');

            modalImage.src = imageUrl;
            modalTitle.textContent = imageTitle;
        });

        // Sayfalama işlemi için JavaScript
        document.addEventListener('DOMContentLoaded', function () {
            const itemsPerPage = 3;
            const galleryList = document.getElementById('galleryList');
            const pagination = document.getElementById('pagination');
            const items = galleryList.getElementsByClassName('list-group-item');
            const pageCount = Math.ceil(items.length / itemsPerPage);
            let currentPage = 1;

            function showPage(page) {
                for (let i = 0; i < items.length; i++) {
                    items[i].style.display = 'none';
                }

                const start = (page - 1) * itemsPerPage;
                const end = page * itemsPerPage;

                for (let i = start; i < end && i < items.length; i++) {
                    items[i].style.display = 'block';
                }

                updatePagination();
            }

            function updatePagination() {
                pagination.innerHTML = '';

                const prevButton = document.createElement('button');
                prevButton.textContent = 'Önceki';
                prevButton.classList.add('btn', 'btn-outline-primary', 'btn-sm', 'me-2');
                prevButton.disabled = currentPage === 1;
                prevButton.addEventListener('click', function () {
                    currentPage--;
                    showPage(currentPage);
                });
                pagination.appendChild(prevButton);

                for (let i = 1; i <= pageCount; i++) {
                    const pageButton = document.createElement('button');
                    pageButton.textContent = i;
                    pageButton.classList.add('btn', 'btn-outline-primary', 'btn-sm', 'me-2');
                    if (i === currentPage) {
                        pageButton.classList.add('active');
                        pageButton.classList.replace('btn-outline-primary', 'btn-primary');
                    }
                    pageButton.addEventListener('click', function () {
                        currentPage = i;
                        showPage(currentPage);
                    });
                    pagination.appendChild(pageButton);
                }

                const nextButton = document.createElement('button');
                nextButton.textContent = 'Sonraki';
                nextButton.classList.add('btn', 'btn-outline-primary', 'btn-sm');
                nextButton.disabled = currentPage === pageCount;
                nextButton.addEventListener('click', function () {
                    currentPage++;
                    showPage(currentPage);
                });
                pagination.appendChild(nextButton);
            }

            showPage(currentPage);
        });
    </script>
}